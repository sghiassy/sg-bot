
service: bot

frameworkVersion: "=1.6.1"

provider:
  name: aws
  profile: sg-bot # used to lookup credentials in ~/.aws/credentials
  state: prod
  region: us-west-2
  runtime: nodejs4.3

functions:
  hello:
    handler: src/bot.hello
    description: Have the bot say hi to you
    environment:
      HIPCHAT_URL: ${self:custom.secrets.HIPCHAT_URL}
      HIPCHAT_AUTH_TOKEN: ${self:custom.secrets.HIPCHAT_AUTH_TOKEN}
    events:
    - http:
        path: hello # path in the url
        method: get
  listAll:
    handler: src/bot.listAll
    description: Have the bot list all users to you
    environment:
      HIPCHAT_URL: ${self:custom.secrets.HIPCHAT_URL}
      HIPCHAT_AUTH_TOKEN: ${self:custom.secrets.HIPCHAT_AUTH_TOKEN}
    events:
    - http:
        path: users # path in the url
        method: get


custom:
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}

resources:
  Resources:
    NicoPointTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: UserID
            AttributeType: S
        KeySchema:
          - AttributeName: UserID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: NicoPointTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:DeleteItem
              Resource: arn:aws:dynamodb:*:*:table/Users
        Roles:
          - Ref: IamRoleLambdaExecution

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-secrets-plugin
